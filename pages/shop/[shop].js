import ProductCard from '@/components/productCard'
import Head from 'next/head'
import Image from 'next/image'
import Link from 'next/link'
import {useState, useEffect, useRef} from 'react'
import styles from 'styles/base/shop.module.css'
import nookies from 'nookies'
import Filter from '@/components/modals/filter'

import { fetchShopPaths, fetchShop } from '../../lib/shops'

export default function Shop({shop_detail}) {

  const [listings, setListings] = useState([])

  const [modal, setModal] = useState(false)
  const description = useRef(null)
  const container = useRef(null)

  const [show, setShow] = useState(false)
  const [collapse, setCollapse] = useState(false)

  const toggleModal = ()=>{
    setModal(prev=>!prev)
  }

  useEffect(()=>{

    const fetchProducts = async () =>{
     
      await fetch(`http://localhost:8000/shops/${shop_detail._id}/get-products`, {
        method:'GET',
        headers:{
          'Content-Type':'application/json',
          'Access-Control-Allow-Origin':'*',
        },
        mode:'cors',
      }).then(async res=>await res.json()).then(data=>{
        setListings(data.products)
      })

    }

    fetchProducts()
    console.log(description.current.clientHeight)
    console.log(container.current.clientHeight)
    if(description.current.clientHeight > container.current.clientHeight){
      setCollapse(true)
    }
    // description.current

  },[])

  
  return (
    <div>
      <Head>
        <title>{shop_detail.name}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.product_wrapper}>
        <div className={styles.shop}>
          <div  className={styles.image}>
            <div ref={container} className={styles.image_container}>
              <img className={styles.img_src} src={shop_detail.image}/>
            </div>
          </div>
          <div ref={description}className={styles.details}>
            <p className={styles.name}>{shop_detail.name}</p>
            <p className={styles.sales}>{shop_detail.sales.length} Sales</p>
            <p className={show ? [styles.description, styles.show].join(" ") : styles.description}>{shop_detail.description} adsasd asd asd asd as dasd asd as dasd asd asd as das dasd as da sda sd asd as da sd as da sd a sda sdasdasd asdasd asdasd asdasd asdasd asdasd asdasd asd iauhsd iuahsd iauhsd iausdhasiduh asiduha sdiuha sdiuahsd iuahsdi uashd iausdh iaushd iausdh iausdh iausdh aiushd iaushd iausdh iausdh iaushd oias douahs diau sdhiaudh iaushd iaushd iaushd iaushdiau sdhiaushd iaushd iaushd iaushd iaushd iausd hiaushd iaushd iausdh iaushdiau sdhiaus dhiaus dha isudhaisdu haisudhai usdha isudh aisu dhia usdhia usdhia sudh asd asd asd asd asd asdasdasd asdasd asdasd eeeasd asd a asd 
              {!show && collapse &&
                <span className={styles.more} onClick={()=>setShow(prev =>!prev)}>more...</span>
              }
            </p>
          </div>
        </div>
        <div className={styles.products}>
          <div className={styles.float_container}>
            <div className={styles.filtering} onClick={toggleModal}>
                <p>Filter and sort</p>
            </div>
          </div>
          <div className={styles.list}>
            {listings.length > 0 ?
              listings.map((product)=>(
                <ProductCard product={product}/>
              ))
              :
                <p>No listings</p>
            }
            <div className={styles.product}></div>
            <div className={styles.product}></div>
            <div className={styles.product}></div>
            <div className={styles.product}></div>
            <div className={styles.product}></div>
            <div className={styles.product}></div>
            <div className={styles.product}></div>
            <div className={styles.product}></div>

          </div>
        </div>
      </main>
      {modal &&
        <Filter toggle={toggleModal}/>
      }  
      
    </div>
  )
}

//Turn into a dynamic route
export async function getStaticPaths(){

  const paths = await fetchShopPaths();
  return {
      paths:paths,
      fallback:false
  }

}

export async function getStaticProps({params}){

  let shop = await fetchShop(params.shop)

  console.log(shop)

  return {
    props:{
      shop_detail:shop
    }
  }
}