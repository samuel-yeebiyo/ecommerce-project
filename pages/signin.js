import Head from 'next/head'
import Image from 'next/image'
import Link from 'next/link'

import {useRouter} from 'next/router'
import styles from '../styles/signup.module.css'
import { useFormik } from 'formik'

import {useState} from 'react'

import GuestRoute from '../components/guestRoute'

import Cookie from 'cookie-cutter'


export default function SignIn({toggleNav}) {

  const [user, setUser] = useState({})
  const router = useRouter()

  const formik = useFormik({
    initialValues:{
      username:'',
      password:'',
    },
    validate: values =>{
      const errors={}
      if(!values.username){
        errors.username="Required"
      }
      if(!values.password){
        errors.password="Required"
      }
      return errors
    },
    onSubmit: values=>{
      console.log(values)
      fetch('http://localhost:8000/login', {
        method:'POST',
        headers:{
          'Content-Type':'application/json',
          'Access-Control-Allow-Origin': '*'
        },
        mode:'cors',
        body:JSON.stringify(values)
      }).then(async res => await res.json()).then(data =>{
        
        //check if guestid exists
        let fromGuest = Cookie.get('guestID')
        if(fromGuest){

          //let server transfer current cart to user
          fetch(`http://localhost:8000/user/${data.id}/transfer/${fromGuest}`,{
            method:'POST',
            headers:{
              'Content-Type':'application/json',
              'Allow-Control-Allow-Origin':'*'
            },
            mode:'cors'
          })
          Cookie.set('guestID', '', {expires: new Date(0)} )
        }
        Cookie.set('userID', data.id);
        
        console.log("created cookie")
        router.replace('/')
        router.reload()
        toggleNav()
      })
    }
  }) 

  return (
    <GuestRoute>
      <div>
        <Head>
          <title>Sign In</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>

        <main>
          <div className="user-auth">
            <div>
              <form onSubmit={formik.handleSubmit} className={styles.su_form}>
                
                <label htmlFor='user'>Username</label>
                <input id='username' name='username' type='text' onBlur={formik.handleBlur} onChange={formik.handleChange} value={formik.values.username}/>
                {formik.touched.username && formik.errors.username ? <div>{formik.errors.username}</div> : null}
                
                
                <label htmlFor='password'>Password</label>
                <input id='password' name='password' type='password' onBlur={formik.handleBlur} onChange={formik.handleChange} value={formik.values.password}/>
                {formik.touched.password && formik.errors.password ? <div>{formik.errors.password}</div> : null}
                        
                <button type="submit">Submit</button>
              </form>
            </div>
          </div>
        </main>
          
      </div>
    </GuestRoute>
  )
}