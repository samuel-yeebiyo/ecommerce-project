import Head from 'next/head'
import Image from 'next/image'
import Link from 'next/link'
import styles from 'styles/base/product.module.css'

import {useState, useEffect} from 'react'
import { useUser } from '@/hooks/swrHooks'

import { fetchProductPaths, fetchProduct } from '../../lib/products'

export default function Product({increment, addToCart, product, blocking}) {

  const [primary, setPrimary]= useState(product.primary)
  const [reviews, setReviews] = useState([])
  const {user_p, isLoading} = useUser()
  
  return (
    <div>
      <Head>
        <title>{product.name}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.product_wrapper}>
        <div className={styles.product_container}>
          <div className={styles.left}>
            <div className={styles.showcase}>
              <div className={styles.secondary}>
                <div onClick={()=>{
                  setPrimary(product.primary)
                }} className={styles.option}>
                  <img src={product.primary}/>
                </div>
                {product.secondary.map((item)=>(
                  <div onClick={()=>{
                    setPrimary(item)
                  }} className={styles.option}>
                    <img src={item}/>
                  </div>
                ))
                }
              </div>
              <div className={styles.primary}>
                <img src={primary}/>
              </div>
            </div>
            <div className={styles.inner_container}>
              <div className={styles.title}>
                <p>{product.name}</p>
                <div>heart</div>
              </div>
              <Link href={`/shop/${product.shopPath}`}>
                <a className={styles.shop_link}>{product.shopName}</a>
              </Link>
              <div className={styles.product_rating}>
                Rating {product.rating}/5
              </div>
              <p className={styles.price}>{product.price} SAMO</p>
              {!isLoading && (!user_p || user_p.shopId !== product.shop) &&

                <button className={blocking ? styles.blocking : styles.add} onClick={()=>{
                  //adding to cart
                  if(!blocking){
                    addToCart(product)
                  }              
                }}>{blocking ? "Adding.." :"Add to cart"}</button>

              }

              <div>
                <p className={styles.desc_title}>Product Description</p>
                <p className={styles.description}>{product.desc}</p>
              </div>
            </div>
          </div>
          <div className={styles.right}>
          <div className={styles.reviews}>
              <h2>Reviews ({product.reviews.length})</h2>
              {product.reviews.map((review)=>(
                  <div className={styles.review}>
                    <h3>{review.title}</h3>
                    <div className={styles.rating}>
                      <div className={styles.stars}>
                        {Array.apply(null, Array(5)).map((item, idx)=>(
                          <span className={idx+1 <= review.rating ? styles.filled_star : styles.star}/>
                        ))}
                      </div>
                      <p>{review.name}</p>
                      <p>{review.date}</p>
                    </div>
                    <p>{review.description}</p>
                  </div>
              ))

              }
            </div>
          </div>
        </div>
      </main>
        
    </div>
  )
}

//Turn into a dynamic route
export async function getStaticPaths(){
  const paths = await fetchProductPaths();
  return {
      paths:paths,
      fallback:false
  }
}

export async function getStaticProps({params}){

  let product = await fetchProduct(params.product)

  //get the desired shop information here
  console.log({product})


  return {
    props:{
      product:product
    }
  }
}