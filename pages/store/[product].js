import Head from 'next/head'
import Image from 'next/image'
import Link from 'next/link'
import styles from 'styles/base/product.module.css'

import {useState, useEffect} from 'react'

import { fetchProductPaths, fetchProducts, fetchProduct } from '../../lib/products'

export default function Product({increment, addToCart, product, blocking}) {

  const [primary, setPrimary]= useState(product.primary)

  
  return (
    <div>
      <Head>
        <title>{product.name}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.product_wrapper}>
        <div className={styles.product_container}>
          <div className={styles.left}>
            <div className={styles.showcase}>
              <div className={styles.secondary}>
                <div onClick={()=>{
                  setPrimary(product.primary)
                }} className={styles.option}>
                  <img src={product.primary}/>
                </div>
                {product.secondary.map((item)=>(
                  <div onClick={()=>{
                    setPrimary(item)
                  }} className={styles.option}>
                    <img src={item}/>
                  </div>
                ))
                }
              </div>
              <div className={styles.primary}>
                <img src={primary}/>
              </div>
            </div>
            <div className={styles.reviews}>
              <h2>Reviews (10)</h2>
              <div className={styles.review}>
                <h3>Title</h3>
                <div className={styles.rating}>
                  <div>Rating</div>
                  <p>Name</p>
                  <p>Date</p>
                </div>
                <p>Detailed content of the review, this is an attempt at using filler words.Detailed content of the review sdfsdf sdf sdf sdfsdf sdf , this is an attempt at using filler words.Detailed content of the review, this is an attemptsdfsdf sdf sd at using filler words.Detailed content of the review, this is an attempt at using filler words.</p>
              </div>
              <div className={styles.review}>
                <h3>Title</h3>
                <div className={styles.rating}>
                  <div>Rating</div>
                  <p>Name</p>
                  <p>Date</p>
                </div>
                <p>Detailed content of the review, this is an attempt at using filler words.Detailed content ofdsfss sdfsd sdf sdf   the review, this is an attempt at using filler words.Detailed content of the review, this is an attempt at using filler words.Detailed content of the review, this is an attempt at using filler words.</p>
              </div>
              <div className={styles.review}>
                <h3>Title</h3>
                <div className={styles.rating}>
                  <div>Rating</div>
                  <p>Name</p>
                  <p>Date</p>
                </div>
                <p>Detailed content of the review, this is an attempt at using filler words.Detailed content of the review, lorem sdfsdf this is an attempt at using filler words.Detailed content of the rsdfs dasdas eview, this is an attempt at using filler words.Detailed content of the review, this is an attempt at using filler words.</p>
              </div>
            </div>
          </div>
          <div className={styles.right}>
            <div className={styles.inner_container}>
              <div className={styles.title}>
                <p>{product.name}</p>
                <div>heart</div>
              </div>
              <Link href="#">
                <a className={styles.shop_link}>Link to shop</a>
              </Link>
              <div className={styles.product_rating}>
                Rating (10)
              </div>
              <p className={styles.price}>{product.price} SAMO</p>
              <button className={blocking ? styles.blocking : styles.add} onClick={()=>{
                //adding to cart
                if(!blocking){
                  addToCart({
                    productId:product._id,
                    name:product.name,
                    price:product.price
                  })
                }              
              }}>{blocking ? "Adding.." :"Add to cart"}</button>


              <div>
                <p className={styles.desc_title}>Product Description</p>
                <p className={styles.description}>{product.desc}</p>
              </div>
            </div>
          </div>
        </div>
      </main>
        
    </div>
  )
}

//Turn into a dynamic route
export async function getStaticPaths(){
  const paths = await fetchProductPaths();
  return {
      paths:paths,
      fallback:false
  }
}

export async function getStaticProps({params}){

  let product = await fetchProduct(params.product)

  return {
    props:{
      product:product
    }
  }
}