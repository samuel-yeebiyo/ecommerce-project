import Head from 'next/head'
import Image from 'next/image'
import Link from 'next/link'
import styles from '../styles/signup.module.css'
import { useFormik } from 'formik'
import { useRouter } from 'next/router'

import {useState} from 'react'
import Cookie from 'cookie-cutter'
import GuestRoute from '../components/guestRoute'


export default function SignUp({toggleNav}) {

  const [user, setUser] = useState({})
  const router = useRouter()

  const formik = useFormik({
    initialValues:{
      username:'',
      email:'',
      password:'',
      confirmation:''
    },
    validate: values =>{
      const errors={}
      if(!values.username){
        errors.username="Required"
      }
      if(!values.email){
        errors.email="Required"
      }
      if(!values.password){
        errors.password="Required"
      }
      if(!values.confirmation){
        errors.confirmation="Required"
      }else if(values.confirmation != values.password){
        errors.confirmation="Must match password"
      }
      return errors
    },
    onSubmit: values=>{
      console.log(values)
      fetch('http://localhost:8000/register', {
        method:'POST',
        headers:{
          'Content-Type':'application/json',
          'Access-Control-Allow-Origin': '*'
        },
        mode:'cors',
        body:JSON.stringify(values)
      }).then(async res => await res.json()).then(async data =>{

        //check if guestid exists
        let fromGuest = Cookie.get('guestID')
        if(fromGuest){

          //let server transfer current cart to user
          await fetch(`http://localhost:8000/user/${data.id}/transfer/${fromGuest}`,{
            method:'POST',
            headers:{
              'Content-Type':'application/json',
              'Access-Control-Allow-Origin':'*'
            },
            mode:'cors'
          }).then(async res => await res.json()).then(message => {
            console.log("Transfer complete")
            console.log(message)
            Cookie.set('guestID', '', {expires: new Date(0)} )
            Cookie.set('userID', data.id);
            console.log("created cookie")
            router.reload()
          })
        }else{
          Cookie.set('userID', data.id);        
          console.log("created cookie")
          window.location.replace("/")
        }
      })
    }
  }) 

  return (
    <GuestRoute>
    <div>
      <Head>
        <title>Sign Up</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.signup_container}>
        <div className={styles.signup}>
          <div className={styles.form_section}>
            <form onSubmit={formik.handleSubmit} className={styles.su_form}>
              <p>Sign Up</p>
              <div className={styles.input_req}>
                <input placeholder='Username' id='username' name='username' type='text' onBlur={formik.handleBlur} onChange={formik.handleChange} value={formik.values.username}/>
                {formik.touched.username && formik.errors.username ? <div className={styles.err}>{formik.errors.username}</div> : null}
              </div>
              <div className={styles.input_req}>
                <input placeholder='Email address' id='email' name='email' type='email' onBlur={formik.handleBlur} onChange={formik.handleChange} value={formik.values.email}/>
                {formik.touched.email && formik.errors.email ? <div className={styles.err}>{formik.errors.email}</div> : null}
              </div>
              <div className={styles.input_req}>
                <input placeholder='Password'id='password' name='password' type='password' onBlur={formik.handleBlur} onChange={formik.handleChange} value={formik.values.password}/>
                {formik.touched.password && formik.errors.password ? <div className={styles.err}>{formik.errors.password}</div> : null}
              </div>
              <div className={styles.input_req}>
                <input placeholder='Confirm Password' id='confirmation' name='confirmation' type='password' onBlur={formik.handleBlur} onChange={formik.handleChange} value={formik.values.confirmation}/>
                {formik.touched.confirmation && formik.errors.confirmation ? <div className={styles.err}>{formik.errors.confirmation}</div> : null}
              </div>
              <button type="submit">Submit</button>
            </form>
          </div>
          <div className={styles.welcome_image}>
            <img src="/pointleft.jpg"/>
          </div>
        </div>
      </main>
        
    </div>
    </GuestRoute>
  )
}