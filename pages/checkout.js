import Head from 'next/head'
import Image from 'next/image'
import Link from 'next/link'
import styles from 'styles/base/checkout.module.css'
import { useState, useEffect } from 'react'
import { useUser } from '@/hooks/swrHooks'
import nookies from 'nookies'

import Shipping from '@/components/modals/shipping'

import { useFormik } from 'formik'

import ConnectToPhantom from '@/components/connectPhantom'
import Reciept from '@/components/reciept'

export default function Checkout({order, user, guest, clear}) {

    const {user_p, error, isLoading} = useUser()


    const [deliveryExpand, setDeliveryExpand] = useState(false)
    const [billingExpand, setBillingExpand] = useState(false)
    const [emailExpand, setEmailExpand] = useState(true)
    
    const [email, setEmail] = useState(false)
    const [delivery, setDelivery] = useState(false)

    const [shipping, setShipping] = useState([])
    const [address, setAddress] = useState({})

    const[confirmed, setConfirmed] = useState(false)
    const[reciept, setReciept] = useState({})


    const [modal, setModal] = useState(false)

    const toggleModal = () =>{
        setModal(prev => !prev)
    }

    const selectAddress = (address) =>{
        setAddress(address)
        setDelivery(true)
        setBillingExpand(true)
        setDeliveryExpand(false)
    }

    const confirmTransaction = (data)=>{
        setReciept(prev => {
            prev = {...data}
            return prev
        })
        setConfirmed(true)
    }

    const fetchAddress = async ()=>{
        const cookies = nookies.get()
        
        await fetch('http://localhost:8000/user/get/address', {
            method:'GET',
            headers:{
            'Content-Type':'application/json',
            'Access-Control-Allow-Origin':'cors',
            'authorization': `Bearer ${cookies.accessToken}`
            },
            mode:'cors'
        }).then(async res=>await res.json()).then(address =>{
            console.log({address})
            setShipping(address)
        })
    }


    useEffect(()=>{
        
        email && setDeliveryExpand(true)
        if(!isLoading && user_p && user_p.id){
            setEmail(true)
            setDeliveryExpand(true)
        }

        //fetch available shipping addresses
        fetchAddress()

    },[email]) 

    const emailF = useFormik({
        initialValues:{
            email:''
        },
        // validate: values =>{
        //     const errors={}
        //     if(!values.email){
        //         errors.email="Required"
        //     }
        //     return errors
        // },
        onSubmit: values =>{
            setEmail(true)
            setDeliveryExpand(true)
            setEmailExpand(false)
        }
    })

  return (
    <div>
        <Head>
            <title>Checkout</title>
            <meta name="description" content="Generated by create next app" />
            <link rel="icon" href="/favicon.ico" />
        </Head>

        <main className={styles.checkout_wrapper}>
            {!confirmed ? 
                <div className={styles.checkout_main}>
                    <p className={styles.checkout_title}>CHECKOUT</p>
                    <div className={styles.checkout_container}>
                        <div className={styles.checkout_details}>
                            <div className={styles.section}>
                                <div className={styles.title} onClick={()=>setEmailExpand(true)}>
                                    <p>Customer</p>
                                    <div className={styles.nums}>
                                        <p>1</p>
                                    </div>
                                    {(!isLoading && user_p && user_p.id || email) ?
                                        <img src="/check.png"/> : <></>
                                    }
                                </div>
                                {!isLoading && !user_p && !email && emailExpand && <>                                
                                    <p>Sign in or continue as guest</p>
                                    <form onSubmit={emailF.handleSubmit} className={styles.continue}>
                                        <input type='email' id='email' placeholder='Email address' value={emailF.values.email} onChange={emailF.handleChange}/>
                                        <button type="submit">Continue</button>
                                    </form>
                                    </>
                                }
                            </div>
                            <div className={`${styles.section} ${delivery ? styles.expand: ""}`}>
                                <div className={styles.title} onClick={()=>setDeliveryExpand(true)}>
                                    <p>Delivery</p>
                                    <div className={styles.nums}>
                                        <p>2</p>
                                    </div>
                                    {delivery ?
                                        <img src="/check.png"/> : <></>
                                    }
                                </div>
                                { deliveryExpand &&
                                    <div>
                                        {shipping.length > 0 ?
                                            shipping.map((address)=>(<>
                                                <p>Select shipping address</p>
                                            <div className={styles.address}>
                                                <div className={styles.top}>
                                                <p><strong>{address.first_name} {address.last_name}</strong></p>
                                                <div className={styles.options}>
                                                    <p onClick={()=>{
                                                        selectAddress(address)
                                                    }}>Select</p>
                                                </div>
                                                </div>
                                                <p>{address.street}</p>
                                                <p>{address.city}, {address.country}</p>
                                                <p>{address.postal}</p>
                                                <p>{address.phone_number}</p>
                                            </div>
                                            </>)) : Object.keys(address).length == 0 ?
                                                <h4 className={styles.no_address}>No shipping address</h4>
                                                : <div className={styles.address}>
                                                <div className={styles.top}>
                                                <p><strong>{address.first_name} {address.last_name}</strong></p>
                                                <div className={styles.options}>
                                                    <p onClick={()=>{
                                                        selectAddress(address)
                                                    }}>Select</p>
                                                </div>
                                                </div>
                                                <p>{address.street}</p>
                                                <p>{address.city}, {address.country}</p>
                                                <p>{address.postal}</p>
                                                <p>{address.phone_number}</p>
                                            </div>
                                        }
                                        <button onClick={toggleModal}>Use Another Shipping Address</button>

                                    </div>

                                }
                                
                            </div>
                            <div className={styles.section}>
                                <div className={styles.title}>
                                    <p>Billing</p>
                                    <div className={styles.nums}>
                                        <p>3</p>
                                    </div>
                                </div>
                                <div className={styles.billing}>
                                    {(delivery || billingExpand) &&
                                        <ConnectToPhantom confirm={confirmTransaction} user={user} email={emailF.values.email} address={address} total={order.subtotal} clear={clear}/>
                                    }
                                </div>
                            </div>

                        </div>
                        <div className={styles.checkout_summary}>
                            <div className={styles.order}>
                                <p className={styles.order_title}>Your order</p>
                                {order && order.items.length != 0 ? <>
                                {order.items.map((item, idx)=>(
                                    <div className={styles.item} key={idx}>
                                        <div className={styles.quantity}>
                                            <p>{item.quantity}</p>
                                            <p>x</p>
                                            <p> {item.product.name}</p>
                                        </div>
                                        <p>${item.product.price}</p>
                                    </div>
                                ))}
                                <div className={styles.subtotal}>
                                    <p>Subtotal</p>
                                    <p className={styles.total}>${order.subtotal}</p>
                                </div>
                                </>
                                :
                                <div className={styles.empty_state}>
                                <svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 0 24 24" width="24px" fill="#000000"><path d="M0 0h24v24H0V0z" fill="none"/><path d="M15.55 13c.75 0 1.41-.41 1.75-1.03l3.58-6.49c.37-.66-.11-1.48-.87-1.48H5.21l-.94-2H1v2h2l3.6 7.59-1.35 2.44C4.52 15.37 5.48 17 7 17h12v-2H7l1.1-2h7.45zM6.16 6h12.15l-2.76 5H8.53L6.16 6zM7 18c-1.1 0-1.99.9-1.99 2S5.9 22 7 22s2-.9 2-2-.9-2-2-2zm10 0c-1.1 0-1.99.9-1.99 2s.89 2 1.99 2 2-.9 2-2-.9-2-2-2z"/></svg>
                                <p>Your shopping cart is empty!</p> 
                                </div>
                                }
                            </div>
                        </div>
                    </div>
                </div> :
                <Reciept clear={clear} reciept={reciept}/>
            }
            {modal &&
                <Shipping toggle={toggleModal} save={selectAddress}/>
            }
        </main>
    </div>
  )
}
